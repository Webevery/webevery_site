{"version":3,"file":"static/js/844.f9541cea.chunk.js","mappings":"+JACA,EAAyB,uB,SCgBzB,EAde,SAAC,GAAwD,IAAtDA,EAAqD,EAArDA,QAASC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,UACrD,OACE,mBACEL,QAASA,EACTE,KAAMA,EACNC,UAAS,UAAKA,EAAL,YAAkBG,EAAlB,KACTF,GAAIA,EACJ,aAAYC,EALd,SAOGJ,GAGN,C,oECdD,MAA8B,iCAA9B,EAAiF,qCAAjF,EAAoI,iCAApI,EAA0N,qCAA1N,EAA8Q,kCAA9Q,EAAqU,wCAArU,EAAkY,wCAAlY,EAAgc,yCAAhc,EAAqgB,+CAArgB,EAAikB,gCAAjkB,EAAgnB,kCAAhnB,EAA4pB,6B,iDCM/oBM,EAAc,WACzB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAUC,EAAAA,GAAAA,KACd,WAAwDC,GAAO,IAA5DT,EAA2D,EAA3DA,GAAIU,EAAuD,EAAvDA,QAASb,EAA8C,EAA9CA,MAAOc,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,YACjCC,EAAc,SAAAL,GAClB,GAAIJ,IAAcI,EAChB,OAAOH,EAAa,MAEtBA,EAAaG,EACd,EAED,OACE,qBAASV,UAAWG,EAApB,WACE,wBAAKL,KACL,mBACEE,UAAWG,EACXN,QAAS,WACPkB,EAAYL,EACb,EAJH,SAMGJ,IAAcI,EAAI,0DAAe,kCAGpC,iBAAKV,UAAWG,EAAhB,WACE,eACEH,UACEM,IAAcI,EACVP,EACAA,EAJR,SAOGQ,EAAQK,KAAI,SAAAC,GACX,OACE,eACEjB,UAAS,UAAKG,EAAL,KADX,SAIGc,GC1BD,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACrB,EAAIsB,GAWvD,OAREtB,IAFFsB,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGT,GAAE,GAbe,CDwBKG,GAKV,OAGH,cACE1B,UACEM,IAAcI,EACVP,EACAA,EAJR,SAOGW,QAIL,iBAAKd,UAAWG,EAAhB,WACE,iBAAKH,UAAWG,EAAhB,WACE,yBAAIS,EAAJ,gCACA,wEAAaC,EAAb,YAEF,SAACc,EAAA,EAAD,CACE7B,MAAM,mDACNE,UAAWG,EACXN,QAASkB,SAlDkCd,EAuDpD,IAGH,OAAO,8BAAGO,GACX,EEpED,EARoB,WAClB,OACE,oBAASR,UAAWG,EAApB,UACE,SAACC,EAAD,KAGL,ECAD,EAPe,WACb,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["webpack://webevery_site/./src/components/share/Button/Button.module.scss?c089","components/share/Button/Button.jsx","webpack://webevery_site/./src/components/screens/DevelopmentPage/OurServices.module.scss?45df","components/screens/DevelopmentPage/GetServices.jsx","../node_modules/nanoid/index.browser.js","components/screens/DevelopmentPage/OurServices.jsx","pages/Prices/Prices.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__DeFIc\"};","import React from 'react';\nimport styles from './Button.module.scss';\n\nconst Button = ({ onClick, title, type, className, id, ariaLabel }) => {\n  return (\n    <button\n      onClick={onClick}\n      type={type}\n      className={`${className} ${styles.button} `}\n      id={id}\n      aria-label={ariaLabel}\n    >\n      {title}\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"OurServices\":\"OurServices_OurServices__B247P\",\"servicesWrapper\":\"OurServices_servicesWrapper__P9z15\",\"whatIsItBtn\":\"OurServices_whatIsItBtn__B16N5\",\"pulse\":\"OurServices_pulse__U9liT\",\"allDescrWrapper\":\"OurServices_allDescrWrapper__ftelt\",\"servicesList\":\"OurServices_servicesList__RJroh\",\"servicesList__item\":\"OurServices_servicesList__item__8G3Zp\",\"servicesListHidden\":\"OurServices_servicesListHidden__G2c4Q\",\"servicesDescription\":\"OurServices_servicesDescription__KnRn7\",\"servicesDescriptionHidden\":\"OurServices_servicesDescriptionHidden__sqS9N\",\"btnWrapper\":\"OurServices_btnWrapper__h+VDC\",\"priceWrapper\":\"OurServices_priceWrapper__I1m38\",\"mainBtn\":\"OurServices_mainBtn__M5BkP\"};","import styles from './OurServices.module.scss';\n\nimport { pricesData } from 'data';\nimport Button from '../../share/Button/Button';\nimport { nanoid } from 'nanoid';\nimport { useState } from 'react';\n\nexport const GetServices = () => {\n  const [isClicked, setIsClicked] = useState(null);\n\n  const GetData = pricesData.map(\n    ({ id, details, title, daysCount, price, description }, i) => {\n      const handleClick = i => {\n        if (isClicked === i) {\n          return setIsClicked(null);\n        }\n        setIsClicked(i);\n      };\n\n      return (\n        <section className={styles.servicesWrapper} key={id}>\n          <h2>{title}</h2>\n          <button\n            className={styles.whatIsItBtn}\n            onClick={() => {\n              handleClick(i);\n            }}\n          >\n            {isClicked === i ? 'Зрозуміло!' : 'Що це..?'}\n          </button>\n\n          <div className={styles.allDescrWrapper}>\n            <ul\n              className={\n                isClicked === i\n                  ? styles.servicesListHidden\n                  : styles.servicesList\n              }\n            >\n              {details.map(item => {\n                return (\n                  <li\n                    className={`${styles.servicesList__item} `}\n                    key={nanoid()}\n                  >\n                    {item}\n                  </li>\n                );\n              })}\n            </ul>\n\n            <p\n              className={\n                isClicked === i\n                  ? styles.servicesDescription\n                  : styles.servicesDescriptionHidden\n              }\n            >\n              {description}\n            </p>\n          </div>\n\n          <div className={styles.btnWrapper}>\n            <div className={styles.priceWrapper}>\n              <p>{daysCount} днів</p>\n              <p>Ціна від {price} $</p>\n            </div>\n            <Button\n              title=\"Замовити\"\n              className={styles.mainBtn}\n              onClick={handleClick}\n            />\n          </div>\n        </section>\n      );\n    }\n  );\n\n  return <>{GetData}</>;\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styles from './OurServices.module.scss';\nimport { GetServices } from './GetServices';\n\nconst OurServices = () => {\n  return (\n    <article className={styles.OurServices}>\n      <GetServices />\n    </article>\n  );\n};\n\nexport default OurServices;\n","import OurServices from '../../components/screens/DevelopmentPage';\n\nconst Prices = () => {\n  return (\n    <>\n      <OurServices />\n    </>\n  );\n};\nexport default Prices;\n"],"names":["onClick","title","type","className","id","ariaLabel","styles","GetServices","useState","isClicked","setIsClicked","GetData","pricesData","i","details","daysCount","price","description","handleClick","map","item","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","Button"],"sourceRoot":""}