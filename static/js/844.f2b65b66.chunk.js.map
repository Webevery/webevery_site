{"version":3,"file":"static/js/844.f2b65b66.chunk.js","mappings":"gKACA,MAA8B,iCAA9B,EAAiF,qCAAjF,EAAoI,iCAApI,EAA0N,qCAA1N,EAA8Q,kCAA9Q,EAAqU,wCAArU,EAAkY,wCAAlY,EAAgc,yCAAhc,EAAqgB,+CAArgB,EAAikB,gCAAjkB,EAAgnB,kCAAhnB,EAA4pB,6B,iDCM/oBA,EAAc,WACzB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAUC,EAAAA,GAAAA,KACd,WAAwDC,GAAO,IAA5DC,EAA2D,EAA3DA,GAAIC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,YACjCC,EAAc,SAAAP,GAClB,GAAIJ,IAAcI,EAChB,OAAOH,EAAa,MAEtBA,EAAaG,EACd,EAED,OACE,qBAASQ,UAAWC,EAApB,WACE,wBAAKN,KACL,mBACEK,UAAWC,EACXC,QAAS,WACPH,EAAYP,EACb,EAJH,SAMGJ,IAAcI,EAAI,0DAAe,kCAGpC,iBAAKQ,UAAWC,EAAhB,WACE,eACED,UACEZ,IAAcI,EACVS,EACAA,EAJR,SAOGP,EAAQS,KAAI,SAAAC,GACX,OACE,eACEJ,UAAS,UAAKC,EAAL,KADX,SAIGG,GC1BD,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAChB,EAAIiB,GAWvD,OAREjB,IAFFiB,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGT,GAAE,GAbe,CDwBKG,GAKV,OAGH,cACEb,UACEZ,IAAcI,EACVS,EACAA,EAJR,SAOGH,QAIL,iBAAKE,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,yBAAIL,EAAJ,gCACA,wEAAaC,EAAb,YAEF,SAACiB,EAAA,EAAD,CACEnB,MAAM,mDACNK,UAAWC,EACXC,QAASH,SAlDkCN,EAuDpD,IAGH,OAAO,8BAAGH,GACX,EEpED,EARoB,WAClB,OACE,oBAASU,UAAWC,EAApB,UACE,SAACf,EAAD,KAGL,ECAD,EAPe,WACb,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["webpack://webevery_site/./src/components/screens/DevelopmentPage/OurServices.module.scss?45df","components/screens/DevelopmentPage/GetServices.jsx","../node_modules/nanoid/index.browser.js","components/screens/DevelopmentPage/OurServices.jsx","pages/Prices/Prices.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"OurServices\":\"OurServices_OurServices__B247P\",\"servicesWrapper\":\"OurServices_servicesWrapper__P9z15\",\"whatIsItBtn\":\"OurServices_whatIsItBtn__B16N5\",\"pulse\":\"OurServices_pulse__U9liT\",\"allDescrWrapper\":\"OurServices_allDescrWrapper__ftelt\",\"servicesList\":\"OurServices_servicesList__RJroh\",\"servicesList__item\":\"OurServices_servicesList__item__8G3Zp\",\"servicesListHidden\":\"OurServices_servicesListHidden__G2c4Q\",\"servicesDescription\":\"OurServices_servicesDescription__KnRn7\",\"servicesDescriptionHidden\":\"OurServices_servicesDescriptionHidden__sqS9N\",\"btnWrapper\":\"OurServices_btnWrapper__h+VDC\",\"priceWrapper\":\"OurServices_priceWrapper__I1m38\",\"mainBtn\":\"OurServices_mainBtn__M5BkP\"};","import styles from './OurServices.module.scss';\n\nimport { pricesData } from 'data';\nimport Button from '../../share/Button/Button';\nimport { nanoid } from 'nanoid';\nimport { useState } from 'react';\n\nexport const GetServices = () => {\n  const [isClicked, setIsClicked] = useState(null);\n\n  const GetData = pricesData.map(\n    ({ id, details, title, daysCount, price, description }, i) => {\n      const handleClick = i => {\n        if (isClicked === i) {\n          return setIsClicked(null);\n        }\n        setIsClicked(i);\n      };\n\n      return (\n        <section className={styles.servicesWrapper} key={id}>\n          <h2>{title}</h2>\n          <button\n            className={styles.whatIsItBtn}\n            onClick={() => {\n              handleClick(i);\n            }}\n          >\n            {isClicked === i ? 'Зрозуміло!' : 'Що це..?'}\n          </button>\n\n          <div className={styles.allDescrWrapper}>\n            <ul\n              className={\n                isClicked === i\n                  ? styles.servicesListHidden\n                  : styles.servicesList\n              }\n            >\n              {details.map(item => {\n                return (\n                  <li\n                    className={`${styles.servicesList__item} `}\n                    key={nanoid()}\n                  >\n                    {item}\n                  </li>\n                );\n              })}\n            </ul>\n\n            <p\n              className={\n                isClicked === i\n                  ? styles.servicesDescription\n                  : styles.servicesDescriptionHidden\n              }\n            >\n              {description}\n            </p>\n          </div>\n\n          <div className={styles.btnWrapper}>\n            <div className={styles.priceWrapper}>\n              <p>{daysCount} днів</p>\n              <p>Ціна від {price} $</p>\n            </div>\n            <Button\n              title=\"Замовити\"\n              className={styles.mainBtn}\n              onClick={handleClick}\n            />\n          </div>\n        </section>\n      );\n    }\n  );\n\n  return <>{GetData}</>;\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styles from './OurServices.module.scss';\nimport { GetServices } from './GetServices';\n\nconst OurServices = () => {\n  return (\n    <article className={styles.OurServices}>\n      <GetServices />\n    </article>\n  );\n};\n\nexport default OurServices;\n","import OurServices from '../../components/screens/DevelopmentPage';\n\nconst Prices = () => {\n  return (\n    <>\n      <OurServices />\n    </>\n  );\n};\nexport default Prices;\n"],"names":["GetServices","useState","isClicked","setIsClicked","GetData","pricesData","i","id","details","title","daysCount","price","description","handleClick","className","styles","onClick","map","item","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","Button"],"sourceRoot":""}